const sizeof(str) 16 end
macro str.count 0 + end
macro str.data  8 + end

// count "string" ptr -->
proc store_str ptr ptr int -- --
    over over
    str.data swap .64
    swap drop
    str.count swap .64
end

// ptr --> count "string"
proc read_str ptr -- int ptr --
    dup str.count ,64
    swap str.data ,64
end

macro chop_left // input
    dup str.count dup ,64 1 - .64 
    dup str.data dup ,64 1 + .64
    drop
end

proc str_trim_left ptr -- --
    while
        if dup str.count ,64 0 > do
            dup str.data ,64 (ptr) , 32 =
        else
            0 (bool)
        end
    do
        dup chop_left
    end
    drop
end

proc str_chop_line ptr ptr -- --
    2dup str.data ,64 swap str.data swap .64
    over str.count 0 .64
    while
        if dup str.count ,64 0 > do
            dup str.data ,64 (ptr) , 10 !=
        else
            0 (bool)
        end
    do
        dup chop_left
        swap
        dup str.count dup ,64 1 + .64
        swap
    end
    if dup str.count ,64 0 > do
        dup chop_left
    end
    drop drop
end

proc str_chop_word ptr ptr -- --
    2dup str.data ,64 swap str.data swap .64
    over str.count 0 .64
    while
        if dup str.count ,64 0 > do
            dup str.data ,64 (ptr) , 32 !=
        else
            0 (bool)
        end
    do
        dup chop_left
        swap
        dup str.count dup ,64 1 + .64
        swap
    end
    if dup str.count ,64 0 > do
        dup chop_left
    end
    drop drop
end
